# clean everything up

set -e

echo "killing mongod and mongos"
sudo service mongod stop || true
killall mongod || true
killall mongos || true

# take time to shutdown ports
sleep 4

echo "removing data files"
# rm -rf {{mongo_db_base_path}}
# rm -rf {{mongo_log_base_path}}

# For mac make sure rlimits are high enough to open all necessary connections
ulimit -n 2048


# start data shards
{% for server in data_members %}
rm -rf {{mongo_db_base_path}}/{{server.replSetName}}/{{server.clusterRole}}_{{server.rs_id | default(0)}} || true
mkdir -p {{mongo_db_base_path}}/{{server.replSetName}}/{{server.clusterRole}}_{{server.rs_id | default(0)}}
echo "{{server.port}}"
mongod --config {{mongo_config_base_path}}/mongo_{{server.replSetName}}_{{server.rs_id | default(0)}}_shard.conf --fork
sleep 1
{% endfor %}

# start config servers
{% for server in config_members %}
rm -rf {{mongo_db_base_path}}/{{server.replSetName}}/{{server.clusterRole}}_{{server.rs_id | default(0)}}
mkdir -p {{mongo_db_base_path}}/{{server.replSetName}}/{{server.clusterRole}}_{{server.rs_id | default(0)}}
echo "{{server.port}}"
mongod --config {{mongo_config_base_path}}/mongo_{{server.replSetName}}_{{server.rs_id | default(0)}}_config.conf --fork
{% endfor %}


sleep 5
echo connecting to the servers and initiate the replica-set

{% for server in data_members %}
{% if server.primary %}

# {{server.replSetName}}

echo "Initializing replset  {{server.replSetName}}"

mongo --port {{server.port}} << 'EOF'
config = { _id: "{{server.replSetName}}", members:[
          {% for memberserver in data_members | selectattr("replSetName", "equalto", server.replSetName) %}
          {% if not loop.first %},{% endif %}{ _id : {{memberserver.rs_id}}, host : "{{memberserver.ip | default('127.0.0.1')}}:{{memberserver.port}}" }
          {% endfor %}
         ]};
rs.initiate(config)
EOF
{% endif %}
{% endfor %}

exit

# start router servers
{% for item in router_members %}
echo "{{item.port}}"
mongos --port {{item.port}} --logpath "{{mongo_log_base_path}}/{{item.clusterRole}}_{{item.replSetName}}_{{item.rs_id | default(0)}}.log" --configdb {% for server in item.configDB %}{{server.ip | default(box_address)}}:{{server.port}}{% if not loop.last %},{% endif %}{% endfor %} --fork

mongo --port {{item.port}} << 'EOF'
{% for server in data_members %}
db.adminCommand( { addshard : "{{server.replSetName}}/"+"{{server.ip}}:{{server.port}}" } );
{% endfor %}
db.adminCommand({enableSharding: "test"});
EOF

# mongos --config {{mongo_config_base_path}}/mongo_{{item.replSetName}}_{{item.rs_id | default(0)}}_router.conf
{% endfor %}
